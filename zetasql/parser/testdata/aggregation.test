select f1, f2 from T where f1=f2 group by f1
--
QueryStatement [0-44]
  Query [0-44]
    Select [0-44]
      SelectList [7-13]
        SelectColumn [7-9]
          PathExpression [7-9]
            Identifier(f1) [7-9]
        SelectColumn [11-13]
          PathExpression [11-13]
            Identifier(f2) [11-13]
      FromClause [14-20]
        TablePathExpression [19-20]
          PathExpression [19-20]
            Identifier(T) [19-20]
      WhereClause [21-32]
        BinaryExpression(=) [27-32]
          PathExpression [27-29]
            Identifier(f1) [27-29]
          PathExpression [30-32]
            Identifier(f2) [30-32]
      GroupBy [33-44]
        GroupingItem [42-44]
          PathExpression [42-44]
            Identifier(f1) [42-44]
--
SELECT
  f1,
  f2
FROM
  T
WHERE
  f1 = f2
GROUP BY f1
==

select f1, f2 from T group by f1, f2, 1, 2
--
QueryStatement [0-42]
  Query [0-42]
    Select [0-42]
      SelectList [7-13]
        SelectColumn [7-9]
          PathExpression [7-9]
            Identifier(f1) [7-9]
        SelectColumn [11-13]
          PathExpression [11-13]
            Identifier(f2) [11-13]
      FromClause [14-20]
        TablePathExpression [19-20]
          PathExpression [19-20]
            Identifier(T) [19-20]
      GroupBy [21-42]
        GroupingItem [30-32]
          PathExpression [30-32]
            Identifier(f1) [30-32]
        GroupingItem [34-36]
          PathExpression [34-36]
            Identifier(f2) [34-36]
        GroupingItem [38-39]
          IntLiteral(1) [38-39]
        GroupingItem [41-42]
          IntLiteral(2) [41-42]
--
SELECT
  f1,
  f2
FROM
  T
GROUP BY f1, f2, 1, 2
==

select f1 from T group by f1 having f1 < 5;
--
QueryStatement [0-42]
  Query [0-42]
    Select [0-42]
      SelectList [7-9]
        SelectColumn [7-9]
          PathExpression [7-9]
            Identifier(f1) [7-9]
      FromClause [10-16]
        TablePathExpression [15-16]
          PathExpression [15-16]
            Identifier(T) [15-16]
      GroupBy [17-28]
        GroupingItem [26-28]
          PathExpression [26-28]
            Identifier(f1) [26-28]
      Having [29-42]
        BinaryExpression(<) [36-42]
          PathExpression [36-38]
            Identifier(f1) [36-38]
          IntLiteral(5) [41-42]
--
SELECT
  f1
FROM
  T
GROUP BY f1
HAVING f1 < 5
==

select f1, sum(f2) from T group by f1 having f1 = 3 and sum(f2) > 5;
--
QueryStatement [0-67]
  Query [0-67]
    Select [0-67]
      SelectList [7-18]
        SelectColumn [7-9]
          PathExpression [7-9]
            Identifier(f1) [7-9]
        SelectColumn [11-18]
          FunctionCall [11-18]
            PathExpression [11-14]
              Identifier(sum) [11-14]
            PathExpression [15-17]
              Identifier(f2) [15-17]
      FromClause [19-25]
        TablePathExpression [24-25]
          PathExpression [24-25]
            Identifier(T) [24-25]
      GroupBy [26-37]
        GroupingItem [35-37]
          PathExpression [35-37]
            Identifier(f1) [35-37]
      Having [38-67]
        AndExpr [45-67]
          BinaryExpression(=) [45-51]
            PathExpression [45-47]
              Identifier(f1) [45-47]
            IntLiteral(3) [50-51]
          BinaryExpression(>) [56-67]
            FunctionCall [56-63]
              PathExpression [56-59]
                Identifier(sum) [56-59]
              PathExpression [60-62]
                Identifier(f2) [60-62]
            IntLiteral(5) [66-67]
--
SELECT
  f1,
  sum(f2)
FROM
  T
GROUP BY f1
HAVING f1 = 3 AND sum(f2) > 5
==

select max(true) as a from T having a;
--
QueryStatement [0-37]
  Query [0-37]
    Select [0-37]
      SelectList [7-21]
        SelectColumn [7-21]
          FunctionCall [7-16]
            PathExpression [7-10]
              Identifier(max) [7-10]
            BooleanLiteral(true) [11-15]
          Alias [17-21]
            Identifier(a) [20-21]
      FromClause [22-28]
        TablePathExpression [27-28]
          PathExpression [27-28]
            Identifier(T) [27-28]
      Having [29-37]
        PathExpression [36-37]
          Identifier(a) [36-37]
--
SELECT
  max(true) AS a
FROM
  T
HAVING a
==

select sum(f1) as a from T having true;
--
QueryStatement [0-38]
  Query [0-38]
    Select [0-38]
      SelectList [7-19]
        SelectColumn [7-19]
          FunctionCall [7-14]
            PathExpression [7-10]
              Identifier(sum) [7-10]
            PathExpression [11-13]
              Identifier(f1) [11-13]
          Alias [15-19]
            Identifier(a) [18-19]
      FromClause [20-26]
        TablePathExpression [25-26]
          PathExpression [25-26]
            Identifier(T) [25-26]
      Having [27-38]
        BooleanLiteral(true) [34-38]
--
SELECT
  sum(f1) AS a
FROM
  T
HAVING true
==

select sum(f1) as a from T having a > 5 having a > 5;
--
ERROR: Syntax error: Expected end of input but got keyword HAVING [at 1:41]
select sum(f1) as a from T having a > 5 having a > 5;
                                        ^
==

select * from (select a from T having a > 5);
--
QueryStatement [0-44]
  Query [0-44]
    Select [0-44]
      SelectList [7-8]
        SelectColumn [7-8]
          Star(*) [7-8]
      FromClause [9-44]
        TableSubquery [14-44]
          Query [15-43]
            Select [15-43]
              SelectList [22-23]
                SelectColumn [22-23]
                  PathExpression [22-23]
                    Identifier(a) [22-23]
              FromClause [24-30]
                TablePathExpression [29-30]
                  PathExpression [29-30]
                    Identifier(T) [29-30]
              Having [31-43]
                BinaryExpression(>) [38-43]
                  PathExpression [38-39]
                    Identifier(a) [38-39]
                  IntLiteral(5) [42-43]

--
SELECT
  *
FROM
  (
    SELECT
      a
    FROM
      T
    HAVING a > 5
  )
==

select array_agg(x order by x) as a from T;
--
QueryStatement [0-42]
  Query [0-42]
    Select [0-42]
      SelectList [7-35]
        SelectColumn [7-35]
          FunctionCall [7-30]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            OrderBy [19-29]
              OrderingExpression(ASC) [28-29]
                PathExpression [28-29]
                  Identifier(x) [28-29]
          Alias [31-35]
            Identifier(a) [34-35]
      FromClause [36-42]
        TablePathExpression [41-42]
          PathExpression [41-42]
            Identifier(T) [41-42]
--
SELECT
  array_agg(x
    ORDER BY x) AS a
FROM
  T
==

select array_agg(x order by x, y nulls last, z) as a from T;
--
QueryStatement [0-59]
  Query [0-59]
    Select [0-59]
      SelectList [7-52]
        SelectColumn [7-52]
          FunctionCall [7-47]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            OrderBy [19-46]
              OrderingExpression(ASC) [28-29]
                PathExpression [28-29]
                  Identifier(x) [28-29]
              OrderingExpression(ASC) [31-43]
                PathExpression [31-32]
                  Identifier(y) [31-32]
                NullOrder(NULLS LAST) [33-43]
              OrderingExpression(ASC) [45-46]
                PathExpression [45-46]
                  Identifier(z) [45-46]
          Alias [48-52]
            Identifier(a) [51-52]
      FromClause [53-59]
        TablePathExpression [58-59]
          PathExpression [58-59]
            Identifier(T) [58-59]
--
SELECT
  array_agg(x
    ORDER BY x, y NULLS LAST, z) AS a
FROM
  T
==

select array_agg(distinct x order by x) as a from T;
--
QueryStatement [0-51]
  Query [0-51]
    Select [0-51]
      SelectList [7-44]
        SelectColumn [7-44]
          FunctionCall(distinct=true) [7-39]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [26-27]
              Identifier(x) [26-27]
            OrderBy [28-38]
              OrderingExpression(ASC) [37-38]
                PathExpression [37-38]
                  Identifier(x) [37-38]
          Alias [40-44]
            Identifier(a) [43-44]
      FromClause [45-51]
        TablePathExpression [50-51]
          PathExpression [50-51]
            Identifier(T) [50-51]
--
SELECT
  array_agg(DISTINCT x
    ORDER BY x) AS a
FROM
  T
==

select array_agg(x order by x + 1, y + z) as a from T;
--
QueryStatement [0-53]
  Query [0-53]
    Select [0-53]
      SelectList [7-46]
        SelectColumn [7-46]
          FunctionCall [7-41]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            OrderBy [19-40]
              OrderingExpression(ASC) [28-33]
                BinaryExpression(+) [28-33]
                  PathExpression [28-29]
                    Identifier(x) [28-29]
                  IntLiteral(1) [32-33]
              OrderingExpression(ASC) [35-40]
                BinaryExpression(+) [35-40]
                  PathExpression [35-36]
                    Identifier(y) [35-36]
                  PathExpression [39-40]
                    Identifier(z) [39-40]
          Alias [42-46]
            Identifier(a) [45-46]
      FromClause [47-53]
        TablePathExpression [52-53]
          PathExpression [52-53]
            Identifier(T) [52-53]
--
SELECT
  array_agg(x
    ORDER BY x + 1, y + z) AS a
FROM
  T
==

select x, array_agg(distinct y order by y) from T group by x
--
QueryStatement [0-60]
  Query [0-60]
    Select [0-60]
      SelectList [7-42]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
        SelectColumn [10-42]
          FunctionCall(distinct=true) [10-42]
            PathExpression [10-19]
              Identifier(array_agg) [10-19]
            PathExpression [29-30]
              Identifier(y) [29-30]
            OrderBy [31-41]
              OrderingExpression(ASC) [40-41]
                PathExpression [40-41]
                  Identifier(y) [40-41]
      FromClause [43-49]
        TablePathExpression [48-49]
          PathExpression [48-49]
            Identifier(T) [48-49]
      GroupBy [50-60]
        GroupingItem [59-60]
          PathExpression [59-60]
            Identifier(x) [59-60]
--
SELECT
  x,
  array_agg(DISTINCT y
    ORDER BY y)
FROM
  T
GROUP BY x
==

select x, array_agg(y order by x desc, z desc) from T group by x
--
QueryStatement [0-64]
  Query [0-64]
    Select [0-64]
      SelectList [7-46]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
        SelectColumn [10-46]
          FunctionCall [10-46]
            PathExpression [10-19]
              Identifier(array_agg) [10-19]
            PathExpression [20-21]
              Identifier(y) [20-21]
            OrderBy [22-45]
              OrderingExpression(DESC) [31-37]
                PathExpression [31-32]
                  Identifier(x) [31-32]
              OrderingExpression(DESC) [39-45]
                PathExpression [39-40]
                  Identifier(z) [39-40]
      FromClause [47-53]
        TablePathExpression [52-53]
          PathExpression [52-53]
            Identifier(T) [52-53]
      GroupBy [54-64]
        GroupingItem [63-64]
          PathExpression [63-64]
            Identifier(x) [63-64]
--
SELECT
  x,
  array_agg(y
    ORDER BY x DESC, z DESC)
FROM
  T
GROUP BY x
==

select x, string_agg(y order by y collate "en_US" desc) from T group by x
--
QueryStatement [0-73]
  Query [0-73]
    Select [0-73]
      SelectList [7-55]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
        SelectColumn [10-55]
          FunctionCall [10-55]
            PathExpression [10-20]
              Identifier(string_agg) [10-20]
            PathExpression [21-22]
              Identifier(y) [21-22]
            OrderBy [23-54]
              OrderingExpression(DESC) [32-54]
                PathExpression [32-33]
                  Identifier(y) [32-33]
                Collate [34-49]
                  StringLiteral("en_US") [42-49]
      FromClause [56-62]
        TablePathExpression [61-62]
          PathExpression [61-62]
            Identifier(T) [61-62]
      GroupBy [63-73]
        GroupingItem [72-73]
          PathExpression [72-73]
            Identifier(x) [72-73]
--
SELECT
  x,
  string_agg(y
    ORDER BY y COLLATE "en_US" DESC)
FROM
  T
GROUP BY x
==

select count(* order by x) from T;
--
QueryStatement [0-33]
  Query [0-33]
    Select [0-33]
      SelectList [7-26]
        SelectColumn [7-26]
          FunctionCall [7-26]
            PathExpression [7-12]
              Identifier(count) [7-12]
            Star(*) [13-14]
            OrderBy [15-25]
              OrderingExpression(ASC) [24-25]
                PathExpression [24-25]
                  Identifier(x) [24-25]
      FromClause [27-33]
        TablePathExpression [32-33]
          PathExpression [32-33]
            Identifier(T) [32-33]
--
SELECT
  count(*
    ORDER BY x)
FROM
  T
==

select anon_count(*, 0, 1 order by x) from T;
--
QueryStatement [0-44]
  Query [0-44]
    Select [0-44]
      SelectList [7-37]
        SelectColumn [7-37]
          FunctionCall [7-37]
            PathExpression [7-17]
              Identifier(anon_count) [7-17]
            Star(*) [18-19]
            IntLiteral(0) [21-22]
            IntLiteral(1) [24-25]
            OrderBy [26-36]
              OrderingExpression(ASC) [35-36]
                PathExpression [35-36]
                  Identifier(x) [35-36]
      FromClause [38-44]
        TablePathExpression [43-44]
          PathExpression [43-44]
            Identifier(T) [43-44]
--
SELECT
  anon_count(*, 0, 1
    ORDER BY x)
FROM
  T
==

select x, array_agg(y order@1 by y) from T group by x
--
QueryStatement [0-53]
  Query [0-53]
    Select [0-53]
      SelectList [7-35]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
        SelectColumn [10-35]
          FunctionCall [10-35]
            PathExpression [10-19]
              Identifier(array_agg) [10-19]
            PathExpression [20-21]
              Identifier(y) [20-21]
            OrderBy [22-34]
              Hint [27-29]
                IntLiteral(1) [28-29]
              OrderingExpression(ASC) [33-34]
                PathExpression [33-34]
                  Identifier(y) [33-34]
      FromClause [36-42]
        TablePathExpression [41-42]
          PathExpression [41-42]
            Identifier(T) [41-42]
      GroupBy [43-53]
        GroupingItem [52-53]
          PathExpression [52-53]
            Identifier(x) [52-53]
--
SELECT
  x,
  array_agg(y
    ORDER @1 BY y)
FROM
  T
GROUP BY x
==

select count(distinct) from T
--
QueryStatement [0-29]
  Query [0-29]
    Select [0-29]
      SelectList [7-22]
        SelectColumn [7-22]
          FunctionCall(distinct=true) [7-22]
            PathExpression [7-12]
              Identifier(count) [7-12]
      FromClause [23-29]
        TablePathExpression [28-29]
          PathExpression [28-29]
            Identifier(T) [28-29]
--
SELECT
  count(DISTINCT)
FROM
  T
==

select anon_count(distinct) from T
--
QueryStatement [0-34]
  Query [0-34]
    Select [0-34]
      SelectList [7-27]
        SelectColumn [7-27]
          FunctionCall(distinct=true) [7-27]
            PathExpression [7-17]
              Identifier(anon_count) [7-17]
      FromClause [28-34]
        TablePathExpression [33-34]
          PathExpression [33-34]
            Identifier(T) [33-34]
--
SELECT
  anon_count(DISTINCT)
FROM
  T
==


select sort_count(order by Key) as c from T;
--
QueryStatement [0-43]
  Query [0-43]
    Select [0-43]
      SelectList [7-36]
        SelectColumn [7-36]
          FunctionCall [7-31]
            PathExpression [7-17]
              Identifier(sort_count) [7-17]
            OrderBy [18-30]
              OrderingExpression(ASC) [27-30]
                PathExpression [27-30]
                  Identifier(Key) [27-30]
          Alias [32-36]
            Identifier(c) [35-36]
      FromClause [37-43]
        TablePathExpression [42-43]
          PathExpression [42-43]
            Identifier(T) [42-43]
--
SELECT
  sort_count(
    ORDER BY Key) AS c
FROM
  T
==

select array_agg(Key order by 1)
from TestTable
--
QueryStatement [0-47]
  Query [0-47]
    Select [0-47]
      SelectList [7-32]
        SelectColumn [7-32]
          FunctionCall [7-32]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-20]
              Identifier(Key) [17-20]
            OrderBy [21-31]
              OrderingExpression(ASC) [30-31]
                IntLiteral(1) [30-31]
      FromClause [33-47]
        TablePathExpression [38-47]
          PathExpression [38-47]
            Identifier(TestTable) [38-47]
--
SELECT
  array_agg(Key
    ORDER BY 1)
FROM
  TestTable
==

select array_agg(x order by x limit 5) as a from T
--
QueryStatement [0-50]
  Query [0-50]
    Select [0-50]
      SelectList [7-43]
        SelectColumn [7-43]
          FunctionCall [7-38]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            OrderBy [19-29]
              OrderingExpression(ASC) [28-29]
                PathExpression [28-29]
                  Identifier(x) [28-29]
            LimitOffset [30-37]
              IntLiteral(5) [36-37]
          Alias [39-43]
            Identifier(a) [42-43]
      FromClause [44-50]
        TablePathExpression [49-50]
          PathExpression [49-50]
            Identifier(T) [49-50]
--
SELECT
  array_agg(x
    ORDER BY x
    LIMIT 5) AS a
FROM
  T
==

select array_agg(x order by x limit 5 offset 2) as a from T
--
QueryStatement [0-59]
  Query [0-59]
    Select [0-59]
      SelectList [7-52]
        SelectColumn [7-52]
          FunctionCall [7-47]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            OrderBy [19-29]
              OrderingExpression(ASC) [28-29]
                PathExpression [28-29]
                  Identifier(x) [28-29]
            LimitOffset [30-46]
              IntLiteral(5) [36-37]
              IntLiteral(2) [45-46]
          Alias [48-52]
            Identifier(a) [51-52]
      FromClause [53-59]
        TablePathExpression [58-59]
          PathExpression [58-59]
            Identifier(T) [58-59]
--
SELECT
  array_agg(x
    ORDER BY x
    LIMIT 5 OFFSET 2) AS a
FROM
  T
==

select array_agg(x limit 5) as a from T
--
QueryStatement [0-39]
  Query [0-39]
    Select [0-39]
      SelectList [7-32]
        SelectColumn [7-32]
          FunctionCall [7-27]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            LimitOffset [19-26]
              IntLiteral(5) [25-26]
          Alias [28-32]
            Identifier(a) [31-32]
      FromClause [33-39]
        TablePathExpression [38-39]
          PathExpression [38-39]
            Identifier(T) [38-39]
--
SELECT
  array_agg(x
    LIMIT 5) AS a
FROM
  T
==

select x, array_agg(y order by x desc, z desc limit 10) from T group by x
--
QueryStatement [0-73]
  Query [0-73]
    Select [0-73]
      SelectList [7-55]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
        SelectColumn [10-55]
          FunctionCall [10-55]
            PathExpression [10-19]
              Identifier(array_agg) [10-19]
            PathExpression [20-21]
              Identifier(y) [20-21]
            OrderBy [22-45]
              OrderingExpression(DESC) [31-37]
                PathExpression [31-32]
                  Identifier(x) [31-32]
              OrderingExpression(DESC) [39-45]
                PathExpression [39-40]
                  Identifier(z) [39-40]
            LimitOffset [46-54]
              IntLiteral(10) [52-54]
      FromClause [56-62]
        TablePathExpression [61-62]
          PathExpression [61-62]
            Identifier(T) [61-62]
      GroupBy [63-73]
        GroupingItem [72-73]
          PathExpression [72-73]
            Identifier(x) [72-73]
--
SELECT
  x,
  array_agg(y
    ORDER BY x DESC, z DESC
    LIMIT 10)
FROM
  T
GROUP BY x
==

select array_agg(x offset 2) as a from T
--
ERROR: Syntax error: Expected ")" but got keyword OFFSET [at 1:20]
select array_agg(x offset 2) as a from T
                   ^
==

select ANY_VALUE(true having max 1) as a from T having a;
--
QueryStatement [0-56]
  Query [0-56]
    Select [0-56]
      SelectList [7-40]
        SelectColumn [7-40]
          FunctionCall [7-35]
            PathExpression [7-16]
              Identifier(ANY_VALUE) [7-16]
            BooleanLiteral(true) [17-21]
            HavingModifier [22-34]
              IntLiteral(1) [33-34]
          Alias [36-40]
            Identifier(a) [39-40]
      FromClause [41-47]
        TablePathExpression [46-47]
          PathExpression [46-47]
            Identifier(T) [46-47]
      Having [48-56]
        PathExpression [55-56]
          Identifier(a) [55-56]
--
SELECT
  ANY_VALUE(true
    HAVING MAX 1) AS a
FROM
  T
HAVING a

==

# HAVING for aggregation function with *.
select COUNT(* having max 1) as a from T having a;
--
QueryStatement [0-49]
  Query [0-49]
    Select [0-49]
      SelectList [7-33]
        SelectColumn [7-33]
          FunctionCall [7-28]
            PathExpression [7-12]
              Identifier(COUNT) [7-12]
            Star(*) [13-14]
            HavingModifier [15-27]
              IntLiteral(1) [26-27]
          Alias [29-33]
            Identifier(a) [32-33]
      FromClause [34-40]
        TablePathExpression [39-40]
          PathExpression [39-40]
            Identifier(T) [39-40]
      Having [41-49]
        PathExpression [48-49]
          Identifier(a) [48-49]
--
SELECT
  COUNT(*
    HAVING MAX 1) AS a
FROM
  T
HAVING a
==

# HAVING for aggregation function with *.
select ANON_COUNT(*, 0, 1 having max 1) as a from T having a;
--
QueryStatement [0-60]
  Query [0-60]
    Select [0-60]
      SelectList [7-44]
        SelectColumn [7-44]
          FunctionCall [7-39]
            PathExpression [7-17]
              Identifier(ANON_COUNT) [7-17]
            Star(*) [18-19]
            IntLiteral(0) [21-22]
            IntLiteral(1) [24-25]
            HavingModifier [26-38]
              IntLiteral(1) [37-38]
          Alias [40-44]
            Identifier(a) [43-44]
      FromClause [45-51]
        TablePathExpression [50-51]
          PathExpression [50-51]
            Identifier(T) [50-51]
      Having [52-60]
        PathExpression [59-60]
          Identifier(a) [59-60]
--
SELECT
  ANON_COUNT(*, 0, 1
    HAVING MAX 1) AS a
FROM
  T
HAVING a
==

# HAVING for aggregation function with no arguments.
select SUM(having max 1) as a from T having a;
--
QueryStatement [0-45]
  Query [0-45]
    Select [0-45]
      SelectList [7-29]
        SelectColumn [7-29]
          FunctionCall [7-24]
            PathExpression [7-10]
              Identifier(SUM) [7-10]
            HavingModifier [11-23]
              IntLiteral(1) [22-23]
          Alias [25-29]
            Identifier(a) [28-29]
      FromClause [30-36]
        TablePathExpression [35-36]
          PathExpression [35-36]
            Identifier(T) [35-36]
      Having [37-45]
        PathExpression [44-45]
          Identifier(a) [44-45]
--
SELECT
  SUM(
    HAVING MAX 1) AS a
FROM
  T
HAVING a
==

select max(max having min max) as a from T having a;
--
QueryStatement [0-51]
  Query [0-51]
    Select [0-51]
      SelectList [7-35]
        SelectColumn [7-35]
          FunctionCall [7-30]
            PathExpression [7-10]
              Identifier(max) [7-10]
            PathExpression [11-14]
              Identifier(max) [11-14]
            HavingModifier [15-29]
              PathExpression [26-29]
                Identifier(max) [26-29]
          Alias [31-35]
            Identifier(a) [34-35]
      FromClause [36-42]
        TablePathExpression [41-42]
          PathExpression [41-42]
            Identifier(T) [41-42]
      Having [43-51]
        PathExpression [50-51]
          Identifier(a) [50-51]
--

SELECT
  max(max
    HAVING MIN max) AS a
FROM
  T
HAVING a

==

select array_agg(x having min y order by z limit 1 offset 2) as a from T having a;
--
QueryStatement [0-81]
  Query [0-81]
    Select [0-81]
      SelectList [7-65]
        SelectColumn [7-65]
          FunctionCall [7-60]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            HavingModifier [19-31]
              PathExpression [30-31]
                Identifier(y) [30-31]
            OrderBy [32-42]
              OrderingExpression(ASC) [41-42]
                PathExpression [41-42]
                  Identifier(z) [41-42]
            LimitOffset [43-59]
              IntLiteral(1) [49-50]
              IntLiteral(2) [58-59]
          Alias [61-65]
            Identifier(a) [64-65]
      FromClause [66-72]
        TablePathExpression [71-72]
          PathExpression [71-72]
            Identifier(T) [71-72]
      Having [73-81]
        PathExpression [80-81]
          Identifier(a) [80-81]
--
SELECT
  array_agg(x
    HAVING MIN y
    ORDER BY z
    LIMIT 1 OFFSET 2) AS a
FROM
  T
HAVING a
==

select any_value(x having y) as a from T having a;
--
ERROR: Syntax error: Expected keyword MAX or keyword MIN but got identifier "y" [at 1:27]
select any_value(x having y) as a from T having a;
                          ^
==

select any_value(x having any_value y) as a from T having a;
--
ERROR: Syntax error: Expected keyword MAX or keyword MIN but got identifier "any_value" [at 1:27]
select any_value(x having any_value y) as a from T having a;
                          ^
==

select array_agg(x order by z having min y) as a from T having a;
--
ERROR: Syntax error: Expected ")" but got keyword HAVING [at 1:31]
select array_agg(x order by z having min y) as a from T having a;
                              ^
==

select array_agg(x limit 1 offset 2 having min y) as a from T having a;
--
ERROR: Syntax error: Expected ")" but got keyword HAVING [at 1:37]
select array_agg(x limit 1 offset 2 having min y) as a from T having a;
                                    ^
==

# CLAMPED BETWEEN with leading identifier or star argument and optionally
# multiple arguments.
select array_agg({{*|x}}{{|, y}} clamped between 1 and 2) as a from T;
--
ALTERNATION GROUP: *,
--
QueryStatement [0-55]
  Query [0-55]
    Select [0-55]
      SelectList [7-48]
        SelectColumn [7-48]
          FunctionCall [7-43]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            Star(*) [17-18]
            ClampedBetweenModifier [19-42]
              IntLiteral(1) [35-36]
              IntLiteral(2) [41-42]
          Alias [44-48]
            Identifier(a) [47-48]
      FromClause [49-55]
        TablePathExpression [54-55]
          PathExpression [54-55]
            Identifier(T) [54-55]
--
SELECT
  array_agg(*
    CLAMPED BETWEEN 1 AND 2) AS a
FROM
  T
--
ALTERNATION GROUP: *,, y
--
QueryStatement [0-58]
  Query [0-58]
    Select [0-58]
      SelectList [7-51]
        SelectColumn [7-51]
          FunctionCall [7-46]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            Star(*) [17-18]
            PathExpression [20-21]
              Identifier(y) [20-21]
            ClampedBetweenModifier [22-45]
              IntLiteral(1) [38-39]
              IntLiteral(2) [44-45]
          Alias [47-51]
            Identifier(a) [50-51]
      FromClause [52-58]
        TablePathExpression [57-58]
          PathExpression [57-58]
            Identifier(T) [57-58]
--
SELECT
  array_agg(*, y
    CLAMPED BETWEEN 1 AND 2) AS a
FROM
  T
--
ALTERNATION GROUP: x,
--
QueryStatement [0-55]
  Query [0-55]
    Select [0-55]
      SelectList [7-48]
        SelectColumn [7-48]
          FunctionCall [7-43]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            ClampedBetweenModifier [19-42]
              IntLiteral(1) [35-36]
              IntLiteral(2) [41-42]
          Alias [44-48]
            Identifier(a) [47-48]
      FromClause [49-55]
        TablePathExpression [54-55]
          PathExpression [54-55]
            Identifier(T) [54-55]
--
SELECT
  array_agg(x
    CLAMPED BETWEEN 1 AND 2) AS a
FROM
  T
--
ALTERNATION GROUP: x,, y
--
QueryStatement [0-58]
  Query [0-58]
    Select [0-58]
      SelectList [7-51]
        SelectColumn [7-51]
          FunctionCall [7-46]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            PathExpression [20-21]
              Identifier(y) [20-21]
            ClampedBetweenModifier [22-45]
              IntLiteral(1) [38-39]
              IntLiteral(2) [44-45]
          Alias [47-51]
            Identifier(a) [50-51]
      FromClause [52-58]
        TablePathExpression [57-58]
          PathExpression [57-58]
            Identifier(T) [57-58]
--
SELECT
  array_agg(x, y
    CLAMPED BETWEEN 1 AND 2) AS a
FROM
  T
==

# The first use of CLAMPED BETWEEN is treated as identifier BETWEEN, since use
# of CLAMPED BETWEEN as a modifier is restricted to functions with arguments as
# demonstrated with the second use. CLAMPED as an identifier or alias does not
# require backquoting.
select array_agg(clamped between 1 and 2{{| clamped between 1 and 2}}) as clamped from T;
--
ALTERNATION GROUP: <empty>
--
QueryStatement [0-59]
  Query [0-59]
    Select [0-59]
      SelectList [7-52]
        SelectColumn [7-52]
          FunctionCall [7-41]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            BetweenExpression(BETWEEN) [25-40]
              PathExpression [17-24]
                Identifier(clamped) [17-24]
              IntLiteral(1) [33-34]
              IntLiteral(2) [39-40]
          Alias [42-52]
            Identifier(clamped) [45-52]
      FromClause [53-59]
        TablePathExpression [58-59]
          PathExpression [58-59]
            Identifier(T) [58-59]
--
SELECT
  array_agg(clamped BETWEEN 1 AND 2) AS clamped
FROM
  T
--
ALTERNATION GROUP:  clamped between 1 and 2
--
QueryStatement [0-83]
  Query [0-83]
    Select [0-83]
      SelectList [7-76]
        SelectColumn [7-76]
          FunctionCall [7-65]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            BetweenExpression(BETWEEN) [25-40]
              PathExpression [17-24]
                Identifier(clamped) [17-24]
              IntLiteral(1) [33-34]
              IntLiteral(2) [39-40]
            ClampedBetweenModifier [41-64]
              IntLiteral(1) [57-58]
              IntLiteral(2) [63-64]
          Alias [66-76]
            Identifier(clamped) [69-76]
      FromClause [77-83]
        TablePathExpression [82-83]
          PathExpression [82-83]
            Identifier(T) [82-83]
--
SELECT
  array_agg(clamped BETWEEN 1 AND 2
    CLAMPED BETWEEN 1 AND 2) AS clamped
FROM
  T
==

# CLAMPED BETWEEN is ordered between HAVING and ORDER BY
select array_agg(x having min y clamped between 1 and 2 {{order by z|limit 1 offset 2}}) as a from T;
--
ALTERNATION GROUP: order by z
--
QueryStatement [0-79]
  Query [0-79]
    Select [0-79]
      SelectList [7-72]
        SelectColumn [7-72]
          FunctionCall [7-67]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            HavingModifier [19-31]
              PathExpression [30-31]
                Identifier(y) [30-31]
            ClampedBetweenModifier [32-55]
              IntLiteral(1) [48-49]
              IntLiteral(2) [54-55]
            OrderBy [56-66]
              OrderingExpression(ASC) [65-66]
                PathExpression [65-66]
                  Identifier(z) [65-66]
          Alias [68-72]
            Identifier(a) [71-72]
      FromClause [73-79]
        TablePathExpression [78-79]
          PathExpression [78-79]
            Identifier(T) [78-79]
--
SELECT
  array_agg(x
    HAVING MIN y
    CLAMPED BETWEEN 1 AND 2
    ORDER BY z) AS a
FROM
  T
--
ALTERNATION GROUP: limit 1 offset 2
--
QueryStatement [0-85]
  Query [0-85]
    Select [0-85]
      SelectList [7-78]
        SelectColumn [7-78]
          FunctionCall [7-73]
            PathExpression [7-16]
              Identifier(array_agg) [7-16]
            PathExpression [17-18]
              Identifier(x) [17-18]
            HavingModifier [19-31]
              PathExpression [30-31]
                Identifier(y) [30-31]
            ClampedBetweenModifier [32-55]
              IntLiteral(1) [48-49]
              IntLiteral(2) [54-55]
            LimitOffset [56-72]
              IntLiteral(1) [62-63]
              IntLiteral(2) [71-72]
          Alias [74-78]
            Identifier(a) [77-78]
      FromClause [79-85]
        TablePathExpression [84-85]
          PathExpression [84-85]
            Identifier(T) [84-85]
--
SELECT
  array_agg(x
    HAVING MIN y
    CLAMPED BETWEEN 1 AND 2
    LIMIT 1 OFFSET 2) AS a
FROM
  T
==

# Appearance of a leading modifier as a trailing modifier is not allowed.
select array_agg(x clamped between 1 and 2 having min y) as a from T;
--
ERROR: Syntax error: Expected ")" but got keyword HAVING [at 1:44]
select array_agg(x clamped between 1 and 2 having min y) as a from T;
                                           ^
==

# Appearance of a trailing modifier as a leading modifier is not allowed.
select array_agg({{x order by z|limit 1 offset 2}} clamped between 1 and 2 having min y) as a from T;
--
ALTERNATION GROUP: x order by z
--
ERROR: Syntax error: Expected ")" but got keyword CLAMPED [at 1:31]
select array_agg(x order by z clamped between 1 and 2 having min y) as a from T;
                              ^
--
ALTERNATION GROUP: limit 1 offset 2
--
ERROR: Syntax error: Expected ")" but got keyword CLAMPED [at 1:35]
select array_agg(limit 1 offset 2 clamped between 1 and 2 having min y) as a ...
                                  ^
